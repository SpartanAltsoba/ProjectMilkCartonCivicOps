# üö® MISSION: COMPLETE THE FULL CIVIC INTELLIGENCE OPS DASHBOARD

## üéØ Objective

Build and wire up the entire **civil intelligence platform** for Project Milk Carton. This dashboard must:

- Collect user input (Zip Code, Scenario, County)
- Launch real backend agents via Firebase
- Display full **forensic traceback of CPS and child welfare systems**
- Include **interactive decision chain diagrams**
- Expose **all agencies, contracts, grants, policies, NGOs, and actors** involved

This is NOT a placeholder system ‚Äî it is a live, tactical, operational dashboard.

---

## üîß FEATURES TO BUILD (MUST BE LIVE AND VISUALLY COMPLETE)

### ‚úÖ /search (Already built, must be polished)
- Input: `Zip Code`, `County`, `City`, `Scenario`
- Auto-resolve Zip Code to:
  - Local, State, and Federal jurisdiction (use **Google Civic API**)
- Button: `Run Investigation`

---

### ‚úÖ /results
Render live agent output:
- `agencyStructure.agencyName`
- `performance.metrics`
- `funding.sources[]`, `contracts[]`, `grants[]`
- `scoringReport.level` ‚Üí show `ScoreBadge` (color-coded, real logic only)
- `foiaPackages[]`, `sourceLinks[]`

Use collapsible cards with **animated transitions** (Framer Motion).

---

### ‚úÖ /diagram
- Render `.puml` decision chain with:
  - **Clickable nodes** that show:
    - Agencies
    - CPS case workers / agents
    - Related NGOs
    - Grant amounts
    - Federal/state/local contract data
    - Legal frameworks / procedures that apply
- Support:
  - Zoom/pan
  - Full-screen toggle
  - Tooltip overlays
  - ‚ÄúDownload `.puml`‚Äù button

---

### üî• NEW INTERACTIVE MODULE: ZIPCODE TRACE

**User Input:** Zip Code  
**On Submit:**
- Use **Google Civic API** to resolve:
  - Mayor / Governor / Congress / State reps
  - Their voting history (bill IDs if available)
  - Agency affiliations
  - Active contracts and grants in region

Overlay this onto:
- Decision Chain Map
- FOIA impact map
- Local Reunification/Adoption performance

---

## üì¶ REQUIRED COMPONENTS

Build or enhance these with animation, interactivity, and no placeholders:

- `ScenarioInputForm.tsx`
- `SearchResults.tsx`
- `ScoreBadge.tsx`
- `DecisionChainViewer.tsx`
- `FoiaPackageList.tsx`
- `SourceList.tsx`
- `ZipcodeTraceMap.tsx` (NEW)

---

## üî• BLACKBOX RULES

- ‚õî ABSOLUTELY NO mock data
- ‚úÖ Must use real Firebase `runSearchAgent` and other agents
- ‚úÖ All visuals must use `global_example_page_theme.css`
- ‚úÖ Components must be mobile-first, animated, and interactive
- ‚úÖ If a component fails to load, show a styled alert or diagnostic block
- ‚úÖ Must POST and render all data within 4 seconds of user submit
- ‚úÖ Code must be committed progressively, with no broken states
- ‚úÖ Map visuals must show decision flow, power structure, and funding traces

---

## üïí DEADLINE: 4 HOURS

You have all files. Use `project-tree.txt`, follow `.blackboxrules`, complete agent logic, render visuals, and light up the dashboard.

MAKE IT COUNT.
